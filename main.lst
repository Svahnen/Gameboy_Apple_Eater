                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _printf
                                     13 	.globl _set_sprite_data
                                     14 	.globl _joypad
                                     15 	.globl _delay
                                     16 	.globl _apple
                                     17 	.globl _smiler
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _DATA
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _INITIALIZED
      000000                         29 _smiler::
      000000                         30 	.ds 48
      000030                         31 _apple::
      000030                         32 	.ds 32
                                     33 ;--------------------------------------------------------
                                     34 ; absolute external ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area _DABS (ABS)
                                     37 ;--------------------------------------------------------
                                     38 ; global & static initialisations
                                     39 ;--------------------------------------------------------
                                     40 	.area _HOME
                                     41 	.area _GSINIT
                                     42 	.area _GSFINAL
                                     43 	.area _GSINIT
                                     44 ;--------------------------------------------------------
                                     45 ; Home
                                     46 ;--------------------------------------------------------
                                     47 	.area _HOME
                                     48 	.area _HOME
                                     49 ;--------------------------------------------------------
                                     50 ; code
                                     51 ;--------------------------------------------------------
                                     52 	.area _CODE
                                     53 ;main.c:9: void main(void)
                                     54 ;	---------------------------------
                                     55 ; Function main
                                     56 ; ---------------------------------
      000000                         57 _main::
      000000 E8 FD                   58 	add	sp, #-3
                                     59 ;main.c:12: int characterX = 20;
      000002 F8 01                   60 	ldhl	sp,	#1
      000004 3E 14                   61 	ld	a, #0x14
      000006 22                      62 	ld	(hl+), a
      000007 AF                      63 	xor	a, a
      000008 77                      64 	ld	(hl), a
                                     65 ;main.c:13: int characterY = 20;
      000009 01 14 00                66 	ld	bc, #0x0014
                                     67 ;main.c:15: set_sprite_data(0, 2, smiler);
      00000C 11r00r00                68 	ld	de, #_smiler
      00000F D5                      69 	push	de
      000010 21 00 02                70 	ld	hl, #0x200
      000013 E5                      71 	push	hl
      000014 CDr00r00                72 	call	_set_sprite_data
      000017 E8 04                   73 	add	sp, #4
                                     74 ;/home/svahnen/Projects/gbdk/include/gb/gb.h:1314: shadow_OAM[nb].tile=tile;
      000019 21r02r00                75 	ld	hl, #(_shadow_OAM + 2)
      00001C 36 00                   76 	ld	(hl), #0x00
                                     77 ;/home/svahnen/Projects/gbdk/include/gb/gb.h:1387: OAM_item_t * itm = &shadow_OAM[nb];
      00001E 21r00r00                78 	ld	hl, #_shadow_OAM
                                     79 ;/home/svahnen/Projects/gbdk/include/gb/gb.h:1388: itm->y=y, itm->x=x;
      000021 3E 14                   80 	ld	a, #0x14
      000023 22                      81 	ld	(hl+), a
      000024 36 14                   82 	ld	(hl), #0x14
                                     83 ;main.c:22: set_sprite_data(2, 2, apple);
      000026 11r30r00                84 	ld	de, #_apple
      000029 D5                      85 	push	de
      00002A 21 02 02                86 	ld	hl, #0x202
      00002D E5                      87 	push	hl
      00002E CDr00r00                88 	call	_set_sprite_data
      000031 E8 04                   89 	add	sp, #4
                                     90 ;/home/svahnen/Projects/gbdk/include/gb/gb.h:1314: shadow_OAM[nb].tile=tile;
      000033 21r0Ar00                91 	ld	hl, #(_shadow_OAM + 10)
      000036 36 02                   92 	ld	(hl), #0x02
                                     93 ;/home/svahnen/Projects/gbdk/include/gb/gb.h:1387: OAM_item_t * itm = &shadow_OAM[nb];
      000038 21r08r00                94 	ld	hl, #(_shadow_OAM + 8)
                                     95 ;/home/svahnen/Projects/gbdk/include/gb/gb.h:1388: itm->y=y, itm->x=x;
      00003B 3E 64                   96 	ld	a, #0x64
      00003D 22                      97 	ld	(hl+), a
      00003E 36 64                   98 	ld	(hl), #0x64
                                     99 ;main.c:26: SHOW_SPRITES;
      000040 F0r00                  100 	ldh	a, (_LCDC_REG + 0)
      000042 F6 02                  101 	or	a, #0x02
      000044 E0r00                  102 	ldh	(_LCDC_REG + 0), a
                                    103 ;main.c:28: while (1)
      000046                        104 00110$:
                                    105 ;main.c:30: switch (joypad())
      000046 CDr00r00               106 	call	_joypad
      000049 7B                     107 	ld	a, e
                                    108 ;main.c:34: move_sprite(0, characterX, characterY);
      00004A F8 00                  109 	ldhl	sp,	#0
      00004C 71                     110 	ld	(hl), c
                                    111 ;main.c:30: switch (joypad())
      00004D FE 01                  112 	cp	a, #0x01
      00004F 28 38                  113 	jr	Z, 00102$
      000051 FE 02                  114 	cp	a, #0x02
      000053 28 0D                  115 	jr	Z, 00101$
                                    116 ;main.c:34: move_sprite(0, characterX, characterY);
      000055 23                     117 	inc	hl
      000056 5E                     118 	ld	e, (hl)
                                    119 ;main.c:30: switch (joypad())
      000057 FE 04                  120 	cp	a, #0x04
      000059 28 57                  121 	jr	Z, 00103$
      00005B D6 08                  122 	sub	a, #0x08
      00005D 28 6D                  123 	jr	Z, 00104$
      00005F C3rE2r00               124 	jp	00105$
                                    125 ;main.c:32: case J_LEFT:
      000062                        126 00101$:
                                    127 ;main.c:33: characterX -= 10;
      000062 F8 01                  128 	ldhl	sp,#1
      000064 2A                     129 	ld	a, (hl+)
      000065 5F                     130 	ld	e, a
      000066 56                     131 	ld	d, (hl)
      000067 21 0A 00               132 	ld	hl, #0x000a
      00006A 7B                     133 	ld	a, e
      00006B 95                     134 	sub	a, l
      00006C 5F                     135 	ld	e, a
      00006D 7A                     136 	ld	a, d
      00006E 9C                     137 	sbc	a, h
      00006F F8 02                  138 	ldhl	sp,	#2
      000071 32                     139 	ld	(hl-), a
                                    140 ;main.c:34: move_sprite(0, characterX, characterY);
      000072 7B                     141 	ld	a, e
      000073 32                     142 	ld	(hl-), a
      000074 2A                     143 	ld	a, (hl+)
      000075 5F                     144 	ld	e, a
      000076 56                     145 	ld	d, (hl)
                                    146 ;/home/svahnen/Projects/gbdk/include/gb/gb.h:1387: OAM_item_t * itm = &shadow_OAM[nb];
      000077 21r00r00               147 	ld	hl, #_shadow_OAM
                                    148 ;/home/svahnen/Projects/gbdk/include/gb/gb.h:1388: itm->y=y, itm->x=x;
      00007A 7B                     149 	ld	a, e
      00007B 22                     150 	ld	(hl+), a
      00007C 72                     151 	ld	(hl), d
                                    152 ;main.c:35: delay(200);
      00007D C5                     153 	push	bc
      00007E 11 C8 00               154 	ld	de, #0x00c8
      000081 D5                     155 	push	de
      000082 CDr00r00               156 	call	_delay
      000085 E1                     157 	pop	hl
      000086 C1                     158 	pop	bc
                                    159 ;main.c:36: break;
      000087 18 59                  160 	jr	00105$
                                    161 ;main.c:37: case J_RIGHT:
      000089                        162 00102$:
                                    163 ;main.c:38: characterX += 10;
      000089 F8 01                  164 	ldhl	sp,#1
      00008B 2A                     165 	ld	a, (hl+)
      00008C 5F                     166 	ld	e, a
      00008D 56                     167 	ld	d, (hl)
      00008E 21 0A 00               168 	ld	hl, #0x000a
      000091 19                     169 	add	hl, de
      000092 E5                     170 	push	hl
      000093 7D                     171 	ld	a, l
      000094 F8 03                  172 	ldhl	sp,	#3
      000096 77                     173 	ld	(hl), a
      000097 E1                     174 	pop	hl
      000098 7C                     175 	ld	a, h
      000099 F8 02                  176 	ldhl	sp,	#2
                                    177 ;main.c:39: move_sprite(0, characterX, characterY);
      00009B 32                     178 	ld	(hl-), a
      00009C 2B                     179 	dec	hl
      00009D 2A                     180 	ld	a, (hl+)
      00009E 57                     181 	ld	d, a
      00009F 5E                     182 	ld	e, (hl)
                                    183 ;/home/svahnen/Projects/gbdk/include/gb/gb.h:1387: OAM_item_t * itm = &shadow_OAM[nb];
      0000A0 21r00r00               184 	ld	hl, #_shadow_OAM
                                    185 ;/home/svahnen/Projects/gbdk/include/gb/gb.h:1388: itm->y=y, itm->x=x;
      0000A3 7A                     186 	ld	a, d
      0000A4 22                     187 	ld	(hl+), a
      0000A5 73                     188 	ld	(hl), e
                                    189 ;main.c:40: delay(200);
      0000A6 C5                     190 	push	bc
      0000A7 11 C8 00               191 	ld	de, #0x00c8
      0000AA D5                     192 	push	de
      0000AB CDr00r00               193 	call	_delay
      0000AE E1                     194 	pop	hl
      0000AF C1                     195 	pop	bc
                                    196 ;main.c:41: break;
      0000B0 18 30                  197 	jr	00105$
                                    198 ;main.c:42: case J_UP:
      0000B2                        199 00103$:
                                    200 ;main.c:43: characterY -= 10;
      0000B2 79                     201 	ld	a, c
      0000B3 C6 F6                  202 	add	a, #0xf6
      0000B5 4F                     203 	ld	c, a
      0000B6 78                     204 	ld	a, b
      0000B7 CE FF                  205 	adc	a, #0xff
      0000B9 47                     206 	ld	b, a
                                    207 ;main.c:44: move_sprite(0, characterX, characterY);
                                    208 ;/home/svahnen/Projects/gbdk/include/gb/gb.h:1387: OAM_item_t * itm = &shadow_OAM[nb];
                                    209 ;/home/svahnen/Projects/gbdk/include/gb/gb.h:1388: itm->y=y, itm->x=x;
      0000BA 79                     210 	ld	a, c
      0000BB 21r00r00               211 	ld	hl, #_shadow_OAM
      0000BE 22                     212 	ld	(hl+), a
      0000BF 73                     213 	ld	(hl), e
                                    214 ;main.c:45: delay(200);
      0000C0 C5                     215 	push	bc
      0000C1 11 C8 00               216 	ld	de, #0x00c8
      0000C4 D5                     217 	push	de
      0000C5 CDr00r00               218 	call	_delay
      0000C8 E1                     219 	pop	hl
      0000C9 C1                     220 	pop	bc
                                    221 ;main.c:46: break;
      0000CA 18 16                  222 	jr	00105$
                                    223 ;main.c:47: case J_DOWN:
      0000CC                        224 00104$:
                                    225 ;main.c:48: characterY += 10;
      0000CC 21 0A 00               226 	ld	hl, #0x000a
      0000CF 09                     227 	add	hl, bc
      0000D0 4D                     228 	ld	c, l
      0000D1 44                     229 	ld	b, h
                                    230 ;main.c:49: move_sprite(0, characterX, characterY);
                                    231 ;/home/svahnen/Projects/gbdk/include/gb/gb.h:1387: OAM_item_t * itm = &shadow_OAM[nb];
                                    232 ;/home/svahnen/Projects/gbdk/include/gb/gb.h:1388: itm->y=y, itm->x=x;
      0000D2 79                     233 	ld	a, c
      0000D3 21r00r00               234 	ld	hl, #_shadow_OAM
      0000D6 22                     235 	ld	(hl+), a
      0000D7 73                     236 	ld	(hl), e
                                    237 ;main.c:50: delay(200);
      0000D8 C5                     238 	push	bc
      0000D9 11 C8 00               239 	ld	de, #0x00c8
      0000DC D5                     240 	push	de
      0000DD CDr00r00               241 	call	_delay
      0000E0 E1                     242 	pop	hl
      0000E1 C1                     243 	pop	bc
                                    244 ;main.c:52: }
      0000E2                        245 00105$:
                                    246 ;main.c:53: if (characterX == appleX && characterY == appleY)
      0000E2 F8 01                  247 	ldhl	sp,	#1
      0000E4 2A                     248 	ld	a, (hl+)
      0000E5 D6 64                  249 	sub	a, #0x64
      0000E7 B6                     250 	or	a, (hl)
      0000E8 C2r46r00               251 	jp	NZ,00110$
      0000EB 79                     252 	ld	a, c
      0000EC D6 64                  253 	sub	a, #0x64
      0000EE B0                     254 	or	a, b
      0000EF C2r46r00               255 	jp	NZ,00110$
                                    256 ;/home/svahnen/Projects/gbdk/include/gb/gb.h:1314: shadow_OAM[nb].tile=tile;
      0000F2 21r02r00               257 	ld	hl, #(_shadow_OAM + 2)
      0000F5 36 01                  258 	ld	(hl), #0x01
      0000F7 21r0Ar00               259 	ld	hl, #(_shadow_OAM + 10)
      0000FA 36 03                  260 	ld	(hl), #0x03
                                    261 ;main.c:58: printf("You won!");
      0000FC 11r07r01               262 	ld	de, #___str_0
      0000FF D5                     263 	push	de
      000100 CDr00r00               264 	call	_printf
      000103 E1                     265 	pop	hl
                                    266 ;main.c:59: break;
                                    267 ;main.c:62: }
      000104 E8 03                  268 	add	sp, #3
      000106 C9                     269 	ret
      000107                        270 ___str_0:
      000107 59 6F 75 20 77 6F 6E   271 	.ascii "You won!"
             21
      00010F 00                     272 	.db 0x00
                                    273 	.area _CODE
                                    274 	.area _INITIALIZER
      000000                        275 __xinit__smiler:
      000000 7E                     276 	.db #0x7e	; 126
      000001 7E                     277 	.db #0x7e	; 126
      000002 FF                     278 	.db #0xff	; 255
      000003 81                     279 	.db #0x81	; 129
      000004 FF                     280 	.db #0xff	; 255
      000005 A5                     281 	.db #0xa5	; 165
      000006 FF                     282 	.db #0xff	; 255
      000007 81                     283 	.db #0x81	; 129
      000008 FF                     284 	.db #0xff	; 255
      000009 81                     285 	.db #0x81	; 129
      00000A FF                     286 	.db #0xff	; 255
      00000B BD                     287 	.db #0xbd	; 189
      00000C FF                     288 	.db #0xff	; 255
      00000D 81                     289 	.db #0x81	; 129
      00000E 7E                     290 	.db #0x7e	; 126
      00000F 7E                     291 	.db #0x7e	; 126
      000010 7E                     292 	.db #0x7e	; 126
      000011 7E                     293 	.db #0x7e	; 126
      000012 FF                     294 	.db #0xff	; 255
      000013 81                     295 	.db #0x81	; 129
      000014 FF                     296 	.db #0xff	; 255
      000015 A5                     297 	.db #0xa5	; 165
      000016 FF                     298 	.db #0xff	; 255
      000017 81                     299 	.db #0x81	; 129
      000018 FF                     300 	.db #0xff	; 255
      000019 A5                     301 	.db #0xa5	; 165
      00001A FF                     302 	.db #0xff	; 255
      00001B 99                     303 	.db #0x99	; 153
      00001C FF                     304 	.db #0xff	; 255
      00001D 81                     305 	.db #0x81	; 129
      00001E 7E                     306 	.db #0x7e	; 126
      00001F 7E                     307 	.db #0x7e	; 126
      000020 7E                     308 	.db #0x7e	; 126
      000021 7E                     309 	.db #0x7e	; 126
      000022 FF                     310 	.db #0xff	; 255
      000023 81                     311 	.db #0x81	; 129
      000024 FF                     312 	.db #0xff	; 255
      000025 81                     313 	.db #0x81	; 129
      000026 FF                     314 	.db #0xff	; 255
      000027 81                     315 	.db #0x81	; 129
      000028 FF                     316 	.db #0xff	; 255
      000029 81                     317 	.db #0x81	; 129
      00002A FF                     318 	.db #0xff	; 255
      00002B 81                     319 	.db #0x81	; 129
      00002C FF                     320 	.db #0xff	; 255
      00002D 81                     321 	.db #0x81	; 129
      00002E 7E                     322 	.db #0x7e	; 126
      00002F 7E                     323 	.db #0x7e	; 126
      000030                        324 __xinit__apple:
      000030 18                     325 	.db #0x18	; 24
      000031 18                     326 	.db #0x18	; 24
      000032 08                     327 	.db #0x08	; 8
      000033 08                     328 	.db #0x08	; 8
      000034 08                     329 	.db #0x08	; 8
      000035 3C                     330 	.db #0x3c	; 60
      000036 00                     331 	.db #0x00	; 0
      000037 7E                     332 	.db #0x7e	; 126
      000038 00                     333 	.db #0x00	; 0
      000039 7E                     334 	.db #0x7e	; 126
      00003A 10                     335 	.db #0x10	; 16
      00003B 6E                     336 	.db #0x6e	; 110	'n'
      00003C 00                     337 	.db #0x00	; 0
      00003D 7E                     338 	.db #0x7e	; 126
      00003E 00                     339 	.db #0x00	; 0
      00003F 3C                     340 	.db #0x3c	; 60
      000040 00                     341 	.db #0x00	; 0
      000041 00                     342 	.db #0x00	; 0
      000042 00                     343 	.db #0x00	; 0
      000043 00                     344 	.db #0x00	; 0
      000044 00                     345 	.db #0x00	; 0
      000045 00                     346 	.db #0x00	; 0
      000046 00                     347 	.db #0x00	; 0
      000047 00                     348 	.db #0x00	; 0
      000048 00                     349 	.db #0x00	; 0
      000049 00                     350 	.db #0x00	; 0
      00004A 00                     351 	.db #0x00	; 0
      00004B 00                     352 	.db #0x00	; 0
      00004C 00                     353 	.db #0x00	; 0
      00004D 00                     354 	.db #0x00	; 0
      00004E 00                     355 	.db #0x00	; 0
      00004F 00                     356 	.db #0x00	; 0
                                    357 	.area _CABS (ABS)
